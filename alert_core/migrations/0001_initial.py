# Generated by Django 5.2.7 on 2025-10-19 15:10

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom / Numéro du Véhicule')),
                ('vehicle_type', models.CharField(choices=[('CCF', 'Camion-Citerne Feu de Forêt'), ('FPT', 'Fourgon Pompe Tonne'), ('VSAV', 'Ambulance'), ('AUTRE', 'Autre')], default='FPT', max_length=50, verbose_name='Type de Véhicule')),
                ('capacity', models.IntegerField(blank=True, null=True, verbose_name="Capacité (Litres d'eau ou Places)")),
                ('status', models.CharField(choices=[('DISPONIBLE', 'Disponible'), ('EN_MISSION', 'En Mission'), ('MAINTENANCE', 'Maintenance')], default='DISPONIBLE', max_length=20, verbose_name='Statut Opérationnel')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Dernière Latitude GPS')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Dernière Longitude GPS')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Dernière Mise à Jour')),
            ],
            options={
                'verbose_name': "Véhicule d'Intervention",
                'verbose_name_plural': "Véhicules d'Intervention",
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('CITOYEN', 'Citoyen Signaleur'), ('POMPIER', 'Sapeur-Pompier')], default='CITOYEN', max_length=20, verbose_name="Rôle de l'utilisateur")),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True, verbose_name='Numéro de Téléphone')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fire_type', models.CharField(choices=[('MAISON', 'Maison / Bâtiment'), ('MARCHÉ', 'Marché / Commerce'), ('VÉGÉTATION', 'Végétation / Brousse'), ('VÉHICULE', 'Véhicule'), ('AUTRE', 'Autre')], max_length=50, verbose_name="Type d'Incendie")),
                ('latitude', models.DecimalField(decimal_places=6, help_text='Coordonnée GPS Nord/Sud', max_digits=9, verbose_name='Latitude GPS')),
                ('longitude', models.DecimalField(decimal_places=6, help_text='Coordonnée GPS Est/Ouest', max_digits=9, verbose_name='Longitude GPS')),
                ('description', models.TextField(blank=True, verbose_name='Détails supplémentaires')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='alerts/', verbose_name="Photo de l'incendie")),
                ('reported_at', models.DateTimeField(auto_now_add=True, verbose_name='Heure du Signalement')),
                ('status', models.CharField(choices=[('NOUVEAU', 'Nouveau Signalement'), ('EN_COURS', 'Intervention en Cours'), ('RÉSOLU', 'Résolu'), ('FAUSSE_ALERTE', 'Fausse Alerte')], default='NOUVEAU', max_length=20, verbose_name="Statut de l'alerte")),
                ('assigned_firefighter', models.ForeignKey(blank=True, limit_choices_to={'role': 'POMPIER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_alerts', to=settings.AUTH_USER_MODEL, verbose_name='Pompier Assigné')),
                ('reported_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Signalé par')),
            ],
            options={
                'verbose_name': 'Alerte Incendie',
                'verbose_name_plural': 'Alertes Incendie',
                'ordering': ['-reported_at'],
            },
        ),
        migrations.CreateModel(
            name='FirefighterProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.CharField(choices=[('CHEF', 'Chef d’équipe'), ('LIEUTENANT', 'Lieutenant'), ('CAPORAL', 'Caporal'), ('SAPEUR', 'Sapeur')], default='SAPEUR', max_length=20, verbose_name='Grade')),
                ('shift_status', models.CharField(choices=[('EN_SERVICE', 'En Service'), ('EN_REPOS', 'En Repos'), ('EN_PAUSE', 'En Pause')], default='EN_REPOS', max_length=20, verbose_name='Statut de Service')),
                ('user', models.OneToOneField(limit_choices_to={'role': 'POMPIER'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Agent Pompier')),
                ('assigned_vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='alert_core.vehicle', verbose_name='Véhicule Assigné')),
            ],
            options={
                'verbose_name': 'Profil Pompier',
                'verbose_name_plural': 'Profils Pompiers',
            },
        ),
    ]
